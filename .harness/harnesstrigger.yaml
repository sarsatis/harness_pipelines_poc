pipeline:
  name: harness-trigger
  identifier: harnesstrigger
  projectIdentifier: default_project
  orgIdentifier: default
  tags: {}
  properties:
    ci:
      codebase:
        connectorRef: GithubOrgLevelConnector
        repoName: harness_pipelines_poc
        build: <+input>
  stages:
    - stage:
        name: stage
        identifier: stage
        description: ""
        type: CI
        spec:
          cloneCodebase: true
          platform:
            os: Linux
            arch: Amd64
          runtime:
            type: Cloud
            spec: {}
          execution:
            steps:
              - step:
                  type: Run
                  name: trigger
                  identifier: trigger
                  spec:
                    shell: Python
                    command: |-
                      import os
                      import re

                      commit_message = os.getenv('commit_message')
                      pr_number = os.getenv('pr_number')  


                      print(f"Commit message: {commit_message}")
                      print(f"pr_number: {pr_number}")

                      # Define the regex pattern for the commit message
                      pattern = r'^(feat|fix|docs|release): [A-Z]+-[0-9]+ .+'

                      # Check if the commit message matches the pattern
                      if re.match(pattern, commit_message):
                          print("Commit message is valid")
                          sys.exit(0)
                      else:
                          print("Invalid commit message. Ensure the message follows the pattern: <type>: <JIRA ID> <message>")
                          sys.exit(1)
                    envVariables:
                      pr_number: <+trigger.prNumber>
                      commit_message: <+trigger.prTitle>
